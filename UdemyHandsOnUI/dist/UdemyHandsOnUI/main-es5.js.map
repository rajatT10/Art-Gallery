{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication/app.router-gaurd.service.ts","webpack:///src/app/authentication/change-forgot-password/change-forgot-password.component.ts","webpack:///src/app/authentication/change-forgot-password/change-forgot-password.component.html","webpack:///src/app/authentication/signin/signin.component.ts","webpack:///src/app/authentication/signin/signin.component.html","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/data-services/rest-data-service.ts","webpack:///src/app/feed/feed.component.ts","webpack:///src/app/feed/feed.component.html","webpack:///src/app/gallery/gallery.component.ts","webpack:///src/app/gallery/gallery.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/my-profile/my-profile.component.ts","webpack:///src/app/my-profile/my-profile.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","withOptions","cookieName","headerName","declarations","providers","bootstrap","RouterGaurdService","router","ChangeForgotPasswordComponent","SigninComponent","gaurd","hide","signInForm","email","console","log","navigate","signIn","SignupComponent","_snackBar","http","signUpForm","required","responseMessage","_snackData","saveOneEntity","value","subscribe","response","message","url","open","afterDismissed","signUp","RestDataService","httpSource","param","post","FeedComponent","GalleryComponent","numbers","HomeComponent","MyProfileComponent","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KADqB,EAErB;AAAED,UAAI,EAAE,iBAAR;AAA2BC,eAAS,EAAE;AAAtC,KAFqB,EAGrB;AAAED,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE;AAA7B,KAHqB,EAIrB;AAAED,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE;AAA7B,KAJqB,EAKrB;AAAED,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KALqB,EAMrB;AAAED,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE;AAAzB,KANqB,CAAvB;;QAaaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACxB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaQ,Y;;;;;;;mCAEA,CACV;;;;;;;uBAHUA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,2I;AAAA;AAAA;ACPzB;;AACE;;AACE;;AAAyB;;AAAG;;AAC5B;;AACE;;AACF;;AACF;;AAEF;;AAGA;;;;;;;;;sEDJaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzeA;;;QA+FaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,iFAAD,EAAiB,4FAAjB,C;AAAoC,gBA3CtC,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,kEANO,EAOP,6EAPO,EAQP,6EARO,EASP,yEATO,EAUP,uEAVO,EAWP,qFAXO,EAYP,iFAZO,EAaP,gFAbO,EAcP,uEAdO,EAeP,yEAfO,EAgBP,yEAhBO,EAiBP,oFAjBO,EAkBP,qEAlBO,EAmBP,2EAnBO,EAoBP,2EApBO,EAqBP,qEArBO,EAsBP,8EAtBO,EAuBP,qEAvBO,EAwBP,2EAxBO,EAyBP,qEAzBO,EA0BP,+EA1BO,EA2BP,sFA3BO,EA4BP,uEA5BO,EA6BP,qEA7BO,EA8BP,4FA9BO,EA+BP,oFA/BO,EAgCP,yEAhCO,EAiCP,2EAjCO,EAkCP,8EAlCO,EAmCP,uEAnCO,EAoCP,qEApCO,EAqCP,+EArCO,EAsCP,0EAAqBC,WAArB,CAAiC;AAC/BC,kBAAU,EAAE,gBADmB;AAE/BC,kBAAU,EAAE;AAFmB,OAAjC,CAtCO,CA2CsC;;;;0HAGpCH,S,EAAS;AAAA,uBAvDlB,2DAuDkB,EAtDlB,uFAsDkB,EArDlB,uFAqDkB,EApDlB,kEAoDkB,EAnDlB,oFAmDkB,EAlDlB,mEAkDkB,EAjDlB,sIAiDkB,EAhDlB,4EAgDkB;AAhDF,kBAGhB,uEAHgB,EAIhB,oEAJgB,EAKhB,4FALgB,EAMhB,qEANgB,EAOhB,0DAPgB,EAQhB,kEARgB,EAShB,6EATgB,EAUhB,6EAVgB,EAWhB,yEAXgB,EAYhB,uEAZgB,EAahB,qFAbgB,EAchB,iFAdgB,EAehB,gFAfgB,EAgBhB,uEAhBgB,EAiBhB,yEAjBgB,EAkBhB,yEAlBgB,EAmBhB,oFAnBgB,EAoBhB,qEApBgB,EAqBhB,2EArBgB,EAsBhB,2EAtBgB,EAuBhB,qEAvBgB,EAwBhB,8EAxBgB,EAyBhB,qEAzBgB,EA0BhB,2EA1BgB,EA2BhB,qEA3BgB,EA4BhB,+EA5BgB,EA6BhB,sFA7BgB,EA8BhB,uEA9BgB,EA+BhB,qEA/BgB,EAgChB,4FAhCgB,EAiChB,oFAjCgB,EAkChB,yEAlCgB,EAmChB,2EAnCgB,EAoChB,8EApCgB,EAqChB,uEArCgB,EAsChB,qEAtCgB,EAuChB,+EAvCgB,EAuCE,yEAvCF;AAgDE,O;AATA,K;;;;;sEASTA,S,EAAS;cAzDrB,sDAyDqB;eAzDZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,uFAFY,EAGZ,uFAHY,EAIZ,kEAJY,EAKZ,oFALY,EAMZ,mEANY,EAOZ,sIAPY,EAQZ,4EARY,CADN;AAWRT,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,kEANO,EAOP,6EAPO,EAQP,6EARO,EASP,yEATO,EAUP,uEAVO,EAWP,qFAXO,EAYP,iFAZO,EAaP,gFAbO,EAcP,uEAdO,EAeP,yEAfO,EAgBP,yEAhBO,EAiBP,oFAjBO,EAkBP,qEAlBO,EAmBP,2EAnBO,EAoBP,2EApBO,EAqBP,qEArBO,EAsBP,8EAtBO,EAuBP,qEAvBO,EAwBP,2EAxBO,EAyBP,qEAzBO,EA0BP,+EA1BO,EA2BP,sFA3BO,EA4BP,uEA5BO,EA6BP,qEA7BO,EA8BP,4FA9BO,EA+BP,oFA/BO,EAgCP,yEAhCO,EAiCP,2EAjCO,EAkCP,8EAlCO,EAmCP,uEAnCO,EAoCP,qEApCO,EAqCP,+EArCO,EAsCP,0EAAqBM,WAArB,CAAiC;AAC/BC,sBAAU,EAAE,gBADmB;AAE/BC,sBAAU,EAAE;AAFmB,WAAjC,CAtCO,CAXD;AAsDRE,mBAAS,EAAE,CAAC,iFAAD,EAAiB,4FAAjB,CAtDH;AAuDRC,mBAAS,EAAE,CAAC,2DAAD;AAvDH,S;AAyDY,Q;;;;;;;;;;;;;;;;;;AC9GtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAIaC,kB;AAET,kCAAoBC,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAkB;;;;sCAE3B;AACP,iBAAO,IAAP;AACH;;;;;;;uBANQD,kB,EAAkB,8G;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB;;;;;sEAAlBA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;;;;;;;;;;;;;;;;;ACJ/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaE,6B;AAEX,+CAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,6B;AAA6B,K;;;YAA7BA,6B;AAA6B,iD;AAAA,c;AAAA,a;AAAA;AAAA;ACP1C;;AAAG;;AAA6B;;;;;;;;sEDOnBA,6B,EAA6B;cALzC,uDAKyC;eAL/B;AACTZ,kBAAQ,EAAE,4BADD;AAETC,qBAAW,EAAE,yCAFJ;AAGTC,mBAAS,EAAE,CAAC,wCAAD;AAHF,S;AAK+B,Q;;;;;;;;;;;;;;;;;;;;AEP1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaW,e;AAKX,+BAAoBC,KAApB,EAAsDH,MAAtD,EAAsE;AAAA;;AAAlD,aAAAG,KAAA,GAAAA,KAAA;AAAkC,aAAAH,MAAA,GAAAA,MAAA;AAHtD,aAAAI,IAAA,GAAiB,IAAjB;AAGyE;;;;mCAE9D;AACT;AACA,eAAKC,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9B,qBAAU,IAAI,0DAAJ,CAAgB,IAAhB,EAAqB,0DAAWC,KAAhC,CADoB;AAE9B,wBAAY,IAAI,0DAAJ,CAAgB,IAAhB;AAFkB,WAAd,CAAlB;AAID;;;iCAEQ;AACPC,iBAAO,CAACC,GAAR,CAAY,KAAKH,UAAjB;AACA,eAAKL,MAAL,CAAYS,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;;;;;;;uBAlBUP,e,EAAe,6I,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,kiB;AAAA;AAAA;ACV5B;;AACI;;AACI;;AAGI;;AAEI;;AACI;;AAAW;;AAAK;;AAChB;;AACJ;;AAEA;;AACI;;AAAW;;AAAQ;;AACnB;;AAEJ;;AACA;;AACI;;AACI;;AAAM;AAAA,mBAAS,IAAAQ,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAO;;AACpC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AApBuC;;AAAA;;AASH;;AAAA;;;;;;;;;sEDJvBR,e,EAAe;cAL3B,uDAK2B;eALjB;AACTb,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAWaoB,e;AAMX,+BAAoBC,SAApB,EAAmDC,IAAnD,EAAkFb,MAAlF,EAAkG;AAAA;;AAA9E,aAAAY,SAAA,GAAAA,SAAA;AAA+B,aAAAC,IAAA,GAAAA,IAAA;AAA+B,aAAAb,MAAA,GAAAA,MAAA;AAJlF,aAAAI,IAAA,GAAgB,IAAhB;AAIqG;;;;mCAE1F;AAET;AACA,eAAKU,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9B,oBAAQ,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWC,QAAjC,CADsB;AAE9B,qBAAS,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,0DAAWT,KAAjC,CAFqB;AAG9B,wBAAY,IAAI,0DAAJ,CAAgB,IAAhB;AAHkB,WAAd,CAAlB;AAMD;;;iCAEQ;AAAA;;AACP,cAAIU,eAAJ;AACA,cAAIC,UAAU,GAAM,EAApB;AACA,eAAKJ,IAAL,CAAUK,aAAV,CAAwB,UAAxB,EAAoC,KAAKJ,UAAL,CAAgBK,KAApD,EAA2DC,SAA3D,CAAqE,UAACC,QAAD,EAAkB;AACrFL,2BAAe,GAAGK,QAAQ,CAACC,OAA3B;AACAL,sBAAU,CAACK,OAAX,GAAqBN,eAArB;AACAC,sBAAU,CAACM,GAAX,GAAiB,SAAjB;AACD,WAJD,EAIG,YAAM;AACPN,sBAAU,CAACK,OAAX,GAAqB,0CAArB;AACAL,sBAAU,CAACM,GAAX,GAAiB,GAAjB;;AACA,iBAAI,CAACX,SAAL,CAAeY,IAAf,CAAoBP,UAAU,CAACK,OAA/B,EAAuC,IAAvC,EAA6CG,cAA7C,GAA8DL,SAA9D,CAAwE,YAAI;AAC1E,mBAAI,CAACpB,MAAL,CAAYS,QAAZ,CAAqB,CAACQ,UAAU,CAACM,GAAZ,CAArB;AACD,aAFD;AAGD,WAVD,EAUG,YAAM;AACP,iBAAI,CAACX,SAAL,CAAeY,IAAf,CAAoBP,UAAU,CAACK,OAA/B,EAAuC,IAAvC,EAA6CG,cAA7C,GAA8DL,SAA9D,CAAwE,YAAI;AAC1E,mBAAI,CAACpB,MAAL,CAAYS,QAAZ,CAAqB,CAACQ,UAAU,CAACM,GAAZ,CAArB;AACD,aAFD;AAGD,WAdD;AAeD;;;;;;;uBArCUZ,e,EAAe,wI,EAAA,wJ,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,opB;AAAA;AAAA;ACX5B;;AACI;;AACI;;AAGI;;AACI;;AACI;;AAAW;;AAAI;;AACf;;AACJ;;AAEA;;AACI;;AAAW;;AAAK;;AAChB;;AACJ;;AAEA;;AACI;;AAAW;;AAAQ;;AACnB;;AACJ;;AAEA;;AACI;;AACI;;AAAM;AAAA,mBAAS,IAAAe,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAO;;AACpC;;AACR;;AACA;;AACA;;AAA8B;;AAAe;;AACjD;;AACJ;;AACJ;;;;AAzBuC;;AAAA;;AAaH;;AAAA;;AASrB;;AAAA;;;;;;;;;sEDhBFf,e,EAAe;cAL3B,uDAK2B;eALjB;AACTtB,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAIaoC,e;AACT,+BAAoBC,UAApB,EAA0C;AAAA;;AAAtB,aAAAA,UAAA,GAAAA,UAAA;AAEnB;;;;sCAEaL,G,EAAaM,K,EAAU;AACjC,iBAAO,KAAKD,UAAL,CAAgBE,IAAhB,CAAqBP,GAArB,EAAyBM,KAAzB,CAAP;AACH;;;;;;;uBAPQF,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;;;sEAAfA,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;ACJ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaI,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,mM;AAAA;AAAA;ACP1B;;AACE;;AACE;;AACF;;AACA;;AAAgC;;AAAU;;AAC1C;;AACE;;AACF;;AACF;;;;;;;;;sEDDaA,a,EAAa;cALzB,uDAKyB;eALf;AACT1C,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIgB;;AACI;;AAMI;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAmB;;AAAI;;AACvB;;AAAmB;;AAAK;;AAC1B;;AACF;;AACN;;;;;;AAOA;;AACI;;AACI;;AACE;;AACA;;AAAgB;;AAAS;;AACzB;;AAAmB;;AAAS;;AAC9B;;AACA;;AACA;;AACE;;AACE;;AAGF;;AACF;;AACA;;AACE;;AAAmB;;AAAI;;AACvB;;AAAmB;;AAAK;;AAC1B;;AACF;;AACN;;;;QD1CHyC,gB;AAEX,kCAAc;AAAA;;AADd,aAAAC,OAAA,GAAU,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,EAA+B,CAA/B,EAAiC,CAAjC,EAAmC,CAAnC,EAAqC,CAArC,CAAV;AACiB;;;;mCAET,CACP;;;;;;;uBALUD,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,upB;AAAA;AAAA;ACP7B;;AACI;;AACI;;AACI;;AACI;;AAmBJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAqBJ;;AACJ;;AACJ;;AACF;;;;AAjD+C;;AAAA;;AAyBA;;AAAA;;;;;;;;;sEDtBpCA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT3C,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;QAOa2C,a;AAEX;AAEA,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBAPUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,+M;AAAA;AAAA;ACP1B;;AACI;;AACE;;AACE;;AACE;;AAAM;;AAAO;;AACf;;AACA;;AACE;;AAAM;;AAAO;;AACf;;AACF;;AACF;;AACF;;;;AAR4E;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDCjEA,a,EAAa;cALzB,uDAKyB;eALf;AACT7C,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa4C,kB;AAEX,oCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,swB;AAAA;AAAA;ACP/B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AACE;;AACE;;AACI;;AAAW;;AAAe;;AAC1B;;AACJ;;AACF;;AACF;;AACA;;AACE;;AAAmB;;AAAI;;AACvB;;AAAmB;;AAAK;;AAC1B;;AACF;;AACN;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA8B;;AAAY;;AAC9C;;AACA;;AACI;;AAAuD;;AAAe;;AAC1E;;AACA;;AACI;;AAAyB;;AACjB;;AACJ;;AAAO;;AAAQ;;AACvB;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;sEDzCaA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT9C,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM6C,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIhC,OAAO,CAACiC,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './authentication/signup/signup.component';\nimport { SigninComponent } from './authentication/signin/signin.component';\nimport { HomeComponent } from './home/home.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { RouterGaurdService } from './authentication/app.router-gaurd.service';\nimport { FeedComponent } from './feed/feed.component';\nimport { ChangeForgotPasswordComponent } from './authentication/change-forgot-password/change-forgot-password.component';\n\n\nconst routes: Routes = [\n  { path: 'feed', component: FeedComponent },\n  { path: 'revive-password', component: ChangeForgotPasswordComponent},\n  { path: 'signup', component: SignupComponent },\n  { path: 'signin', component: SigninComponent },\n  { path: '', component: HomeComponent },\n  { path: '**', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid website-headline\">\n  <div class=\"col-sm-10\" style=\"display: flex;\">\n    <div class=\"firstLetter\">Art</div>\n    <div class=\"secondLetter\">\n      Gallery\n    </div>\n  </div>\n\n</div>\n\n\n<router-outlet></router-outlet>\n\n\n<!-- <svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\"\n  viewBox=\"0 0 2611.084 485.677\">\n  <path id=\"Path_39\" data-name=\"Path 39\"\n    d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\"\n    transform=\"translate(142.69 -634.312)\" fill=\"#eee\" />\n</svg> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SignupComponent } from './authentication/signup/signup.component';\nimport { SigninComponent } from './authentication/signin/signin.component';\nimport { HomeComponent } from './home/home.component';\n\n\n//All Angular material modules\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { RestDataService } from './data-services/rest-data-service';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { RouterGaurdService } from './authentication/app.router-gaurd.service';\nimport { FeedComponent } from './feed/feed.component';\nimport { ChangeForgotPasswordComponent } from './authentication/change-forgot-password/change-forgot-password.component';\nimport { GalleryComponent } from './gallery/gallery.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    SigninComponent,\n    HomeComponent,\n    MyProfileComponent,\n    FeedComponent,\n    ChangeForgotPasswordComponent,\n    GalleryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule, \n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'My-Xsrf-Cookie',\n      headerName: 'My-Xsrf-Header',\n    })\n  ],\n  providers: [RestDataService,RouterGaurdService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class RouterGaurdService implements CanActivate{ \r\n\r\n    constructor(private router: Router) {}\r\n\r\n    canActivate(){\r\n        return true;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-forgot-password',\n  templateUrl: './change-forgot-password.component.html',\n  styleUrls: ['./change-forgot-password.component.css']\n})\nexport class ChangeForgotPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>change-forgot-password works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { RouterGaurdService } from '../app.router-gaurd.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  hide : boolean = true;\n  signInForm: FormGroup;\n\n  constructor(private gaurd: RouterGaurdService,private router: Router) { }\n\n  ngOnInit() {\n    //Creating Sign Up Form\n    this.signInForm = new FormGroup({\n      'email' : new FormControl(null,Validators.email),\n      'password': new FormControl(null)\n    });\n  }\n\n  signIn() {\n    console.log(this.signInForm);\n    this.router.navigate(['/my-profile']);\n  }\n\n}\n","<div class=\"middle-box\">\n    <div class=\"custom-card-container\">\n        <mat-card style=\"background-color: inherit;\n        border-radius: 20px;\n        box-shadow: 0px 5px 30px -15px #b82601;\">\n            <form class=\"example-form\" [formGroup]=\"signInForm\">\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Email</mat-label>\n                    <input matInput placeholder=\"Enter your email address\" formControlName=\"email\">\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Password</mat-label>\n                    <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Enter your password\"\n                        formControlName=\"password\">\n                </mat-form-field>\n                <div style=\"text-align: -webkit-center;\">\n                    <div class=\"custom-card login-options\" target=\"_blank\" rel=\"noopener\">\n                        <span (click)=\"signIn()\">Sign In</span>\n                    </div>\n                </div>\n            </form>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RestDataService } from 'src/app/data-services/rest-data-service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  hide: boolean = true;\n\n  signUpForm: FormGroup;\n\n  constructor(private _snackBar: MatSnackBar,private http: RestDataService, private router: Router) { }\n\n  ngOnInit() {\n\n    //Creating Sign Up Form\n    this.signUpForm = new FormGroup({\n      'name': new FormControl(null, Validators.required),\n      'email': new FormControl(null, Validators.email),\n      'password': new FormControl(null)\n    });\n\n  }\n\n  signUp() {\n    let responseMessage: any;\n    let _snackData:any= {};\n    this.http.saveOneEntity(\"saveUser\", this.signUpForm.value).subscribe((response:any) => {\n      responseMessage = response.message;\n      _snackData.message = responseMessage;\n      _snackData.url = \"/signin\";\n    }, () => {\n      _snackData.message = \"Sorry, Registration was not successfull.\";\n      _snackData.url = \"/\";\n      this._snackBar.open(_snackData.message,\"OK\").afterDismissed().subscribe(()=>{\n        this.router.navigate([_snackData.url]);\n      });\n    }, () => {\n      this._snackBar.open(_snackData.message,\"OK\").afterDismissed().subscribe(()=>{\n        this.router.navigate([_snackData.url]);\n      });\n    });\n  }\n\n}\n","<div class=\"middle-box\">\n    <div class=\"custom-card-container\">\n        <mat-card style=\"background-color: inherit;\n        border-radius: 20px;\n        box-shadow: 0px 5px 30px -15px #b82601;\">\n            <form class=\"example-form\" [formGroup]=\"signUpForm\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Name</mat-label>\n                    <input matInput type=\"text\" placeholder=\"Enter your Name\" formControlName=\"name\">\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Email</mat-label>\n                    <input matInput placeholder=\"Enter your email address\" formControlName=\"email\">\n                </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Password</mat-label>\n                    <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Enter your password\" formControlName=\"password\">\n                </mat-form-field>\n\n                <div style=\"text-align: -webkit-center;\">\n                    <div class=\"custom-card login-options\" target=\"_blank\" rel=\"noopener\">\n                        <span (click)=\"signUp()\">Sign Up</span>\n                    </div>\n            </div>\n            </form>\n            <a [routerLink]=\"['/signin']\">Back to Sign In</a>\n        </mat-card>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class RestDataService {\n    constructor(private httpSource: HttpClient){\n\n    }\n\n    saveOneEntity(url: string, param: any){\n        return this.httpSource.post(url,param);\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\nexport class FeedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-stretch-tabs headerPosition=\"below\" class=\"fixed-bottom bottom-tab\" style=\"width: 100%;\">\n  <mat-tab label=\"My Feed\">\n    <app-gallery></app-gallery>\n  </mat-tab>\n  <mat-tab label=\"My Favourites\"> Content 2 </mat-tab>\n  <mat-tab label=\"My Profile\">\n    <app-my-profile></app-my-profile>\n  </mat-tab>\n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.css']\n})\nexport class GalleryComponent implements OnInit {\n  numbers = [1,2,3,4,5,6,7,8,9,10,11,1,1,1,1,1,1,1];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab label=\"Featured\" style=\"background-color: grey;\">\n        <div class=\"container-fluid justify-content-md-center feed-box\">\n            <div class=\"row middle-box\" >\n                <div class=\"col-sm-3 middle-box\" *ngFor=\"let i of numbers\">\n                    <mat-card class=\"example-card\">\n                        <!-- <mat-card-header>\n                          <div mat-card-avatar class=\"example-header-image\"></div>\n                          <mat-card-title>Shiba Inu</mat-card-title>\n                          <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n                        </mat-card-header> -->\n                        <img mat-card-image style=\"padding: 5px;\" src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\n                        <mat-card-content style=\"font-family: monospace;\">\n                          <p>\n                            The Shiba Inu is the smallest of the six original and distinct spitz breeds.\n                          </p>\n                        </mat-card-content>\n                        <mat-card-actions>\n                          <button mat-button>LIKE</button>\n                          <button mat-button>SHARE</button>\n                        </mat-card-actions>\n                      </mat-card>  \n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Recent\">\n        <div class=\"container-fluid justify-content-md-center feed-box\">\n            <div class=\"row middle-box\" >\n                <div class=\"col-sm-3 middle-box\" *ngFor=\"let i of numbers\">\n                    <mat-card class=\"example-card\">\n                        <mat-card-header>\n                          <div mat-card-avatar class=\"example-header-image\"></div>\n                          <mat-card-title>Shiba Inu</mat-card-title>\n                          <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n                        </mat-card-header>\n                        <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\n                        <mat-card-content>\n                          <p>\n                            The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n                            A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n                            bred for hunting.\n                          </p>\n                        </mat-card-content>\n                        <mat-card-actions>\n                          <button mat-button>LIKE</button>\n                          <button mat-button>SHARE</button>\n                        </mat-card-actions>\n                      </mat-card>  \n                </div>\n            </div>\n        </div>\n    </mat-tab>\n  </mat-tab-group>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  //default\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"middle-box\">\n    <div class=\"custom-card-container \">\n      <mat-card style=\"width: auto;background-color: black;\">\n        <div class=\"custom-card login-options\" target=\"_blank\" rel=\"noopener\" [routerLink]=\"['/signup']\">\n          <span>Sign Up</span>\n        </div>\n        <div class=\"custom-card login-options\" target=\"_blank\" rel=\"noopener\" [routerLink]=\"['/signin']\">\n          <span>Sign In</span>\n        </div>\n      </mat-card>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab label=\"Upload Art\" style=\"background-color: grey;\">\n        <div class=\"container-fluid justify-content-md-center feed-box\">\n            <div class=\"row middle-box\" >\n                <div class=\"col-sm-3 middle-box\">\n                    <mat-card class=\"example-card\">\n                        <img mat-card-image style=\"padding: 5px;\" src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\n                        <mat-card-content style=\"font-family: monospace;\">\n                          <form>\n                            <mat-form-field class=\"example-full-width\">\n                                <mat-label>Add Description</mat-label>\n                                <input matInput placeholder=\"Enter Description\">\n                            </mat-form-field>\n                          </form>\n                        </mat-card-content>\n                        <mat-card-actions>\n                          <button mat-button>LIKE</button>\n                          <button mat-button>SHARE</button>\n                        </mat-card-actions>\n                      </mat-card>  \n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"About Me\">\n        <div class=\"container-fluid justify-content-md-center feed-box\">\n            <div class=\"row middle-box\">\n                <div class=\"col-sm-4 custom-card-container profile\">\n                    <mat-list>\n                        <div mat-subheader>\n                            <h1 class=\"user-name-caption\">Hello, Rajat</h1>\n                        </div>\n                        <mat-list-item>\n                            <div class=\"custom-card\" routerLink=\"/revive-password\">Change Password</div>\n                        </mat-list-item>\n                        <mat-list-item>\n                            <div class=\"custom-card\"><span class=\"material-icons\">\n                                    power_settings_new\n                                </span>Sign out</div>\n                        </mat-list-item>\n                    </mat-list>\n                </div>\n                <div class=\"col-sm-8 custom-card-container profile-router\">\n                    <router-outlet></router-outlet>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n</mat-tab-group>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}